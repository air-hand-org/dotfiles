#!/bin/bash

{{ if and (eq .chezmoi.os "linux") (contains "WSL2" .chezmoi.kernel.osrelease) }}

if [ ! -z $REMOTE_CONTAINERS ] || [ ! -z $CODESPACES ] || [ -f /.dockerenv ] ; then
    echo "do not run in container this script".
    exit 0
fi

# enable systemd service on wsl2
cat << EOF | sudo tee /etc/wsl.conf
[automount]
enabled = true
options = "metadata,umask=22,fmask=11"
#mountFsTab = false

#[network]
#generateHosts = true
#generateResolvConf = true

#[interop]
#enabled = true
#appendWindowsPath = true

#[service]
#enabled = true

[boot]
systemd = true

EOF

# install nvidia-container-toolkit for use gpus in docker container
# https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#setting-up-nvidia-container-toolkit
test ! -f /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg && \
    curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg

distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \
      && curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list | \
            sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
            sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list

sudo apt update && sudo apt install -y nvidia-container-toolkit

sudo mkdir -p /etc/docker

sudo ln -s -f $(wslpath $(wslvar USERPROFILE))/.docker/daemon.json /etc/docker/daemon.json

sudo nvidia-ctk runtime configure --runtime=docker

# restart docker systemd service if installed on wsl2
if systemctl status docker &>/dev/null; then
    sudo systemctl restart docker.service
else
    # Docker Desktop for Windows
    echo 'running the command below to restart docker desktop on windows host!'
    echo 'powershell.exe -Command "Stop-Process -Name 'Docker Desktop' -Force; Start-Process -FilePath 'C:\Program Files\Docker\Docker\Docker Desktop.exe'"'
    powershell.exe -Command "Stop-Process -Name 'Docker Desktop' -Force; Start-Process -FilePath 'C:\Program Files\Docker\Docker\Docker Desktop.exe'"
    sleep 60s
fi

# test
docker run --rm --runtime=nvidia --gpus all nvidia/cuda:11.6.2-base-ubuntu20.04 nvidia-smi
{{ end }}
