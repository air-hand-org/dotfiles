#!/usr/bin/env bash

{{ if and (eq .chezmoi.os "linux") (contains "WSL2" .chezmoi.kernel.osrelease) }}

if [ ! -z $REMOTE_CONTAINERS ] || [ ! -z $CODESPACES ] || [ -f /.dockerenv ] ; then
    echo "do not run in container this script".
    exit 0
fi

# TODO: https://github.com/microsoft/WSL/issues/8943
# depends on kernel version, call exe on wsl2 filesystem is soooooooo slowly, so put on windows filesystem.
# clean: remove .exe from wsl2 fs if exists ...
cat << 'EOF' | xargs -I{} $SHELL -c 'exe_path=$(command -v {} 2>/dev/null) && [[ ! ${exe_path} =~ ^/mnt/.* ]] && echo "${exe_path} on wsl2. removing..." && sudo rm ${exe_path} || true'
spzenhan.exe
uclip.exe
win32yank.exe
npiperelay.exe
EOF

brew install neovim
# neovim + vscode + wsl2
# note: vscode-neovim won't load bashrc or profile, so put exe globally.
install_dir=$(wslpath $(wslvar USERPROFILE))/AppData/Local/bin
sudo mkdir -p $install_dir
cd $install_dir

download_urls=(
    "https://github.com/kaz399/spzenhan.vim/raw/master/zenhan/spzenhan.exe" \
    "https://github.com/suzusime/uclip/releases/download/v0.1.0/uclip.exe" \
    "https://github.com/equalsraf/win32yank/releases/download/v0.1.1/win32yank-x64.zip|win32yank.exe" \
    "https://github.com/jstarks/npiperelay/releases/download/v0.1.0/npiperelay_windows_amd64.zip|npiperelay.exe" \
)
for download_url in "${download_urls[@]}";
do
    download=$(echo $download_url | cut -d '|' -f 1)
    exe=$(basename $(echo $download_url | cut -d '|' -f 2))
    test ! -f $exe && \
        sudo curl -fsSLO $download
    # expand zip
    test ! -f $exe && \
        $(basename $download | grep -q .zip) && \
        unzip -p $(basename $download) $exe | sudo tee $exe > /dev/null
    sudo chmod a+x $exe

    command -v $exe &>/dev/null || echo "WARN: couldn't search ${exe}. maybe ${install_dir} is not in Env:PATH." >&2
done

cd - &>/dev/null

{{ end }}
