name: "Terraform plan and apply"

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions: {}

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    timeout-minutes: 10
    if: contains(github.event.pull_request.labels.*.name, 'terraform-deps')
    env:
      TF_CLOUD_WORKSPACE: ${{ vars.TF_CLOUD_WORKSPACE }}
      TERRAGRUNT_PATH: ${{ github.workspace }}/.github/scripts/tfwrapper.sh
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      # just use to login to terraform cloud
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - uses: aquaproj/aqua-installer@6ce1f8848ec8e61f14d57bd5d7597057a6dd187c # v3.0.1
        with:
          aqua_version: v2.30.0

      - name: init
        run: |
          terragrunt run-all init --terragrunt-non-interactive
        env:
          TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}

      - name: validate
        run: |
          terragrunt run-all validate --terragrunt-non-interactive
        env:
          TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
          GITHUB_APP_ID: ${{ secrets.GH_APP_ID }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
          GITHUB_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: plan
        run: |
          terragrunt run-all plan --terragrunt-non-interactive
        env:
          TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
          GITHUB_APP_ID: ${{ secrets.GH_APP_ID }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
          GITHUB_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: apply
        if: github.event.pull_request.merged == true
        run: |
          terragrunt run-all apply --terragrunt-non-interactive
        env:
          TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
          GITHUB_APP_ID: ${{ secrets.GH_APP_ID }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
          GITHUB_APP_PEM_FILE: ${{ secrets.GH_APP_PEM_FILE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-tf-result:
    needs: terraform
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: always()
    steps:
      - name: check results
        run: |
          FAILURE_JOBS=$(echo "${NEEDS_JSON}" | jq -r 'to_entries | map(select(.value.result == "failure")) | map(.key + " " + .value.result) | join("\n")')
          if [ -n "${FAILURE_JOBS}" ]; then
            echo "The following jobs failed: ${FAILURE_JOBS}"
            exit 1
          fi
        env:
          NEEDS_JSON: ${{ toJSON(needs) }}
